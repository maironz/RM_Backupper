<Window x:Class="RM_Backupper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:fa="clr-namespace:FontAwesome.Sharp;assembly=FontAwesome.Sharp"
        xmlns:menuItems="clr-namespace:RM_Backupper.Main"
        xmlns:conv="clr-namespace:RM_Backupper.Converters"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="RM Backupper" Height="450" Width="847" Icon="/Resources/RMBackupperIcon.ico">
    <Window.Resources>
        <!-- Converters to swap visibility from boolean -->
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <!-- Converters to swap width from boolean -->
        <conv:BoolToWidthConverter x:Key="BoolToWidthConverter"/>
        <Style TargetType="TextBlock" x:Key="SidebarTextStyle">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="Black" />
        </Style>
        <!-- Collapsing Animation for Sidebar -->
        <Storyboard x:Key="CollapseSidebar" Completed="CollapseStoryboard_Completed">
            <DoubleAnimation Storyboard.TargetName="Sidebar" Storyboard.TargetProperty="Width"
                         To="0" Duration="0:0:0.3" />
            <DoubleAnimation Storyboard.TargetName="Sidebar" Storyboard.TargetProperty="Opacity"
                         From="1" To="0" Duration="0:0:0.3" />
        </Storyboard>
        <!-- Expansion Animation for Sidebar-->
        <Storyboard x:Key="ExpandSidebar" Completed="ExpandStoryboard_Completed">
            <DoubleAnimation Storyboard.TargetName="Sidebar" Storyboard.TargetProperty="Width"
                         From="0" Duration="0:0:0.3" />
            <DoubleAnimation Storyboard.TargetName="Sidebar" Storyboard.TargetProperty="Opacity"
                         From="0" To="1" Duration="0:0:0.3" />
        </Storyboard>
        <!-- Sidebar Style-->
        <Style TargetType="Button" x:Key="SidebarButtonStyle">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Height" Value="60" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Cursor" Value="Hand" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Sfondo e bordo -->
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="10"/>
                            <Grid Margin="10,0">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <!-- Icona FontAwesome -->
                                    <fa:IconBlock Icon="{Binding Icon}" FontSize="24" VerticalAlignment="Center" Margin="5,0" />
                                    <!-- Testo -->
                                    <TextBlock Text="{Binding Label}" FontSize="16" VerticalAlignment="Center" Margin="10,0" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFEEEEEE" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <!-- TopBar Style (only icon) -->
        <Style TargetType="Button" x:Key="TopBarButtonStyle">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Hover Effect-->
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="10"/>
                            <!-- Center Icon -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <fa:IconBlock Icon="{Binding Icon}" FontSize="24" VerticalAlignment="Center" Margin="5,0" />
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Hover change color -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFEEEEEE" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Bottombar Button Style (only icon) -->
        <Style TargetType="Button" x:Key="BottomBarButtonStyle">
            <Setter Property="Width" Value="60" />
            <Setter Property="Height" Value="60" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Effetto Hover -->
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="10"/>
                            <!-- Icona Centrale -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <fa:IconBlock Icon="{Binding Icon}" FontSize="24" VerticalAlignment="Center" Margin="5,0" />
                            </StackPanel>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Cambia colore in Hover -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFEEEEEE" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Icon button Style -->
        <Style TargetType="Button" x:Key="IconButtonStyle">
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Sfondo e bordo -->
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="10"/>
                            <Grid Margin="10,0">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <!-- Icona FontAwesome -->
                                    <fa:IconBlock Icon="{Binding Icon}" FontSize="24" VerticalAlignment="Center" Margin="5,0" />
                                    <!-- Testo -->
                                    <TextBlock Text="{Binding Label}" FontSize="16" VerticalAlignment="Center" Margin="10,0" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Cambia colore in Hover -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFEEEEEE" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid RenderTransformOrigin="0,0">
        <Grid.ColumnDefinitions>
            <!-- Sidebar -->
            <ColumnDefinition Width="Auto" />
            <!-- Content -->
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <!-- Content -->
            <RowDefinition Height="*" />
            <!-- BottomBar -->
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- Sidebar -->
        <StackPanel x:Name="Sidebar" Grid.Column="0" Grid.Row="0" Background="White" 
                    HorizontalAlignment="Left"
                    Width="{Binding IsVertical , Converter={StaticResource BoolToWidthConverter}}" 
                    Visibility="{Binding IsSidebarCollapsed, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=false}">
            <Button Style="{StaticResource SidebarButtonStyle}">
                <Button.DataContext>
                    <menuItems:MenuItem Label="Home" Icon="Home" />
                </Button.DataContext>
            </Button>
            <Button Style="{StaticResource SidebarButtonStyle}">
                <Button.DataContext>
                    <menuItems:MenuItem Label="Backup" Icon="Database" />
                </Button.DataContext>
            </Button>
        </StackPanel>
        <!-- Pannello principale -->
        <Grid Grid.Column="1" Grid.Row="0" Background="#F0F0F0">
            <Grid Grid.Column="1" Grid.Row="0" Background="#F0F0F0">
                <!-- Nuova griglia principale nel pannello -->
                <Grid>
                    <Grid.RowDefinitions>
                        <!-- Prima riga per i pulsanti Hamburger -->
                        <RowDefinition Height="Auto"/>
                        <!-- Seconda riga per la ListView -->
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Prima riga: Pulsanti HamburgerButton -->
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">
                        <Button x:Name="HamburgerButton" HorizontalAlignment="Left" VerticalAlignment="Top" Click="ToggleSidebar" Style="{StaticResource IconButtonStyle}" Margin="5">>
                            <Button.DataContext>
                                <menuItems:MenuItem Label="Bars" Icon="Bars" />
                            </Button.DataContext>
                        </Button>
                        <Button x:Name="HamburgerButton2" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource IconButtonStyle}" Margin="5">>
                            <Button.DataContext>
                                <menuItems:MenuItem Label="Add" Icon="Plus" />
                            </Button.DataContext>
                        </Button>
                        <Button x:Name="HamburgerButton3" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource IconButtonStyle}" Margin="5">>
                            <Button.DataContext>
                                <menuItems:MenuItem Label="Remove" Icon="Minus" />
                            </Button.DataContext>
                        </Button>
                    </StackPanel>

                    <!-- Seconda riga: ListView -->
                    <Border BorderBrush="Black" Grid.Row="1"  CornerRadius="20" Margin="10" BorderThickness="1">
                        <ListView x:Name="BackupList">
                        <!-- Definizione delle colonne della ListView (opzionale) -->
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Item" DisplayMemberBinding="{Binding ItemName}" Width="200"/>
                                <GridViewColumn Header="Description" DisplayMemberBinding="{Binding Description}" Width="300"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    </Border>
                </Grid>
            </Grid>
        </Grid>
        <!-- BottomBar -->
        <StackPanel x:Name="BottomBar" Grid.Row="2" Grid.ColumnSpan="2" Background="White" Orientation="Horizontal" HorizontalAlignment="Center" Visibility="{Binding IsVertical, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
            <Button Style="{StaticResource BottomBarButtonStyle}" >
                <Button.DataContext>
                    <menuItems:MenuItem Label="Home" Icon="Home" />
                </Button.DataContext>
            </Button>
            <Button Style="{StaticResource BottomBarButtonStyle}">
                <Button.DataContext>
                    <menuItems:MenuItem Label="Backup" Icon="Database" />
                </Button.DataContext>
            </Button>
        </StackPanel>
    </Grid>
</Window>
